// Generated by CoffeeScript 1.8.0
(function() {
  var countCode, input_ident, input_pswd, md5, old_ident, old_pswd, result, timeout_int;

  md5 = function(str1, str2) {
    return $.md5(str1 + str2);
  };

  countCode = function(password, key) {
    var code1, code16, code32, i, md5one, md5three, md5two, rule, source, str;
    if (!password || !key) {
      return;
    }
    md5one = md5(password, key);
    md5two = md5(md5one, 'long');
    md5three = md5(md5one, 'chang');
    rule = md5three.split("");
    source = md5two.split("");
    i = 0;
    while (i <= 31) {
      if (isNaN(source[i])) {
        str = "longchang1990def";
        if (str.search(rule[i]) > -1) {
          source[i] = source[i].toUpperCase();
        }
      }
      i++;
    }
    code32 = source.join("");
    code1 = code32.slice(0, 1);
    if (isNaN(code1)) {
      code16 = code32.slice(0, 16);
    } else {
      code16 = "L" + code32.slice(1, 16);
    }
    console.log(code16);
    return code16;
  };

  input_pswd = $('#pswd');

  input_ident = $('#ident');

  result = $('#result');

  old_pswd = input_pswd.val();

  old_ident = input_ident.val();

  timeout_int = 0;

  input_pswd.on("keyup", function(ev) {
    old_pswd = this.value;
    if (!!timeout_int) {
      clearTimeout(timeout_int);
    }
    return timeout_int = setTimeout(function() {
      return result.val(countCode(old_pswd, old_ident));
    }, 10);
  });

  input_ident.on("keyup", function(ev) {
    old_ident = this.value;
    if (!!timeout_int) {
      clearTimeout(timeout_int);
    }
    return timeout_int = setTimeout(function() {
      return result.val(countCode(old_pswd, old_ident));
    }, 10);
  });

}).call(this);
